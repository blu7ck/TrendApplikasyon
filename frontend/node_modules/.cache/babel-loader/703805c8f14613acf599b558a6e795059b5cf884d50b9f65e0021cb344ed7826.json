{"ast":null,"code":"const API_URL = process.env.REACT_APP_API_URL;\nexport const fetchRedditData = async () => {\n  try {\n    const response = await fetch(process.env.REACT_APP_REDDIT_API_URL);\n    if (!response.ok) throw new Error(\"Reddit API isteği başarısız oldu.\");\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(\"Reddit verisi çekilirken hata oluştu:\", error);\n    return [];\n  }\n};\nexport const fetchYouTubeData = async () => {\n  try {\n    const response = await fetch(process.env.REACT_APP_YOUTUBE_API_URL);\n    if (!response.ok) throw new Error(\"YouTube API isteği başarısız oldu.\");\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(\"YouTube verisi çekilirken hata oluştu:\", error);\n    return [];\n  }\n};","map":{"version":3,"names":["API_URL","process","env","REACT_APP_API_URL","fetchRedditData","response","fetch","REACT_APP_REDDIT_API_URL","ok","Error","data","json","error","console","fetchYouTubeData","REACT_APP_YOUTUBE_API_URL"],"sources":["D:/TrendApplikasyon/frontend/src/api.js"],"sourcesContent":["const API_URL = process.env.REACT_APP_API_URL;\r\n\r\nexport const fetchRedditData = async () => {\r\n    try {\r\n        const response = await fetch(process.env.REACT_APP_REDDIT_API_URL);\r\n        if (!response.ok) throw new Error(\"Reddit API isteği başarısız oldu.\");\r\n        const data = await response.json();\r\n        return data;\r\n    } catch (error) {\r\n        console.error(\"Reddit verisi çekilirken hata oluştu:\", error);\r\n        return [];\r\n    }\r\n};\r\n\r\nexport const fetchYouTubeData = async () => {\r\n    try {\r\n        const response = await fetch(process.env.REACT_APP_YOUTUBE_API_URL);\r\n        if (!response.ok) throw new Error(\"YouTube API isteği başarısız oldu.\");\r\n        const data = await response.json();\r\n        return data;\r\n    } catch (error) {\r\n        console.error(\"YouTube verisi çekilirken hata oluştu:\", error);\r\n        return [];\r\n    }\r\n};\r\n"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB;AAE7C,OAAO,MAAMC,eAAe,GAAG,MAAAA,CAAA,KAAY;EACvC,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACL,OAAO,CAACC,GAAG,CAACK,wBAAwB,CAAC;IAClE,IAAI,CAACF,QAAQ,CAACG,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,mCAAmC,CAAC;IACtE,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI;EACf,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,uCAAuC,EAAEA,KAAK,CAAC;IAC7D,OAAO,EAAE;EACb;AACJ,CAAC;AAED,OAAO,MAAME,gBAAgB,GAAG,MAAAA,CAAA,KAAY;EACxC,IAAI;IACA,MAAMT,QAAQ,GAAG,MAAMC,KAAK,CAACL,OAAO,CAACC,GAAG,CAACa,yBAAyB,CAAC;IACnE,IAAI,CAACV,QAAQ,CAACG,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,oCAAoC,CAAC;IACvE,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI;EACf,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC;IAC9D,OAAO,EAAE;EACb;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}