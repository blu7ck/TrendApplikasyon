{"ast":null,"code":"const API_URL=process.env.REACT_APP_API_URL;export const fetchRedditData=async()=>{try{const response=await fetch(process.env.REACT_APP_REDDIT_API_URL);if(!response.ok)throw new Error(\"Reddit API isteği başarısız oldu.\");const data=await response.json();return data;}catch(error){console.error(\"Reddit verisi çekilirken hata oluştu:\",error);return[];}};export const fetchYouTubeData=async()=>{try{const response=await fetch(process.env.REACT_APP_YOUTUBE_API_URL);if(!response.ok)throw new Error(\"YouTube API isteği başarısız oldu.\");const data=await response.json();return data;}catch(error){console.error(\"YouTube verisi çekilirken hata oluştu:\",error);return[];}};","map":{"version":3,"names":["API_URL","process","env","REACT_APP_API_URL","fetchRedditData","response","fetch","REACT_APP_REDDIT_API_URL","ok","Error","data","json","error","console","fetchYouTubeData","REACT_APP_YOUTUBE_API_URL"],"sources":["D:/TrendApplikasyon/frontend/src/api.js"],"sourcesContent":["const API_URL = process.env.REACT_APP_API_URL;\r\n\r\nexport const fetchRedditData = async () => {\r\n    try {\r\n        const response = await fetch(process.env.REACT_APP_REDDIT_API_URL);\r\n        if (!response.ok) throw new Error(\"Reddit API isteği başarısız oldu.\");\r\n        const data = await response.json();\r\n        return data;\r\n    } catch (error) {\r\n        console.error(\"Reddit verisi çekilirken hata oluştu:\", error);\r\n        return [];\r\n    }\r\n};\r\n\r\nexport const fetchYouTubeData = async () => {\r\n    try {\r\n        const response = await fetch(process.env.REACT_APP_YOUTUBE_API_URL);\r\n        if (!response.ok) throw new Error(\"YouTube API isteği başarısız oldu.\");\r\n        const data = await response.json();\r\n        return data;\r\n    } catch (error) {\r\n        console.error(\"YouTube verisi çekilirken hata oluştu:\", error);\r\n        return [];\r\n    }\r\n};\r\n"],"mappings":"AAAA,KAAM,CAAAA,OAAO,CAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,CAE7C,MAAO,MAAM,CAAAC,eAAe,CAAG,KAAAA,CAAA,GAAY,CACvC,GAAI,CACA,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAACL,OAAO,CAACC,GAAG,CAACK,wBAAwB,CAAC,CAClE,GAAI,CAACF,QAAQ,CAACG,EAAE,CAAE,KAAM,IAAI,CAAAC,KAAK,CAAC,mCAAmC,CAAC,CACtE,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAL,QAAQ,CAACM,IAAI,CAAC,CAAC,CAClC,MAAO,CAAAD,IAAI,CACf,CAAE,MAAOE,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,CAAC,uCAAuC,CAAEA,KAAK,CAAC,CAC7D,MAAO,EAAE,CACb,CACJ,CAAC,CAED,MAAO,MAAM,CAAAE,gBAAgB,CAAG,KAAAA,CAAA,GAAY,CACxC,GAAI,CACA,KAAM,CAAAT,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAACL,OAAO,CAACC,GAAG,CAACa,yBAAyB,CAAC,CACnE,GAAI,CAACV,QAAQ,CAACG,EAAE,CAAE,KAAM,IAAI,CAAAC,KAAK,CAAC,oCAAoC,CAAC,CACvE,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAL,QAAQ,CAACM,IAAI,CAAC,CAAC,CAClC,MAAO,CAAAD,IAAI,CACf,CAAE,MAAOE,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,CAAC,wCAAwC,CAAEA,KAAK,CAAC,CAC9D,MAAO,EAAE,CACb,CACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}