{"ast":null,"code":"export const fetchRedditData = async () => {\n  const response = await fetch(\"https://www.reddit.com/r/popular/top.json?limit=10\");\n  const data = await response.json();\n  return data.data.children.map(post => ({\n    title: post.data.title,\n    url: post.data.url,\n    thumbnail: post.data.thumbnail !== \"self\" ? post.data.thumbnail : null\n  }));\n};\nexport const fetchTwitterData = async () => {\n  const response = await fetch(\"API_URL_TWITTER\");\n  const data = await response.json();\n  return data.map(tweet => ({\n    title: tweet.text,\n    url: `https://twitter.com/user/status/${tweet.id}`,\n    thumbnail: tweet.media ? tweet.media[0].url : null\n  }));\n};\nexport const fetchYouTubeData = async () => {\n  try {\n    console.log(\"🔵 YouTube API çağrılıyor...\");\n    const response = await fetch(\"http://localhost:8080/api/youtube/trends\");\n    console.log(\"🔵 API Yanıt Kodu:\", response.status);\n    if (!response.ok) {\n      throw new Error(`HTTP Hatası! Durum Kodu: ${response.status}`);\n    }\n    const data = await response.json();\n    console.log(\"✅ JSON Olarak İşlenen Veri:\", data);\n    if (!Array.isArray(data)) {\n      console.error(\"⚠️ Beklenmeyen API yanıtı:\", data);\n      return [];\n    }\n    return data.map(video => ({\n      title: video.title,\n      url: video.url,\n      thumbnail: video.thumbnail || \"\" // Eğer thumbnail boşsa, hata vermesin diye.\n    }));\n  } catch (error) {\n    console.error(\"❌ YouTube verileri çekilemedi:\", error);\n    return [];\n  }\n};\nexport const fetchInstagramData = async () => {\n  const response = await fetch(\"API_URL_INSTAGRAM\");\n  const data = await response.json();\n  return data.map(post => ({\n    title: post.caption,\n    url: post.permalink,\n    thumbnail: post.media_url\n  }));\n};","map":{"version":3,"names":["fetchRedditData","response","fetch","data","json","children","map","post","title","url","thumbnail","fetchTwitterData","tweet","text","id","media","fetchYouTubeData","console","log","status","ok","Error","Array","isArray","error","video","fetchInstagramData","caption","permalink","media_url"],"sources":["C:/Users/blu4c/OneDrive/Desktop/blu4ck/IntelliJ/stuff/trendappv01/trendapp-ui/src/api.js"],"sourcesContent":["export const fetchRedditData = async () => {\r\n    const response = await fetch(\"https://www.reddit.com/r/popular/top.json?limit=10\");\r\n    const data = await response.json();\r\n    return data.data.children.map(post => ({\r\n        title: post.data.title,\r\n        url: post.data.url,\r\n        thumbnail: post.data.thumbnail !== \"self\" ? post.data.thumbnail : null\r\n    }));\r\n};\r\n\r\n\r\nexport const fetchTwitterData = async () => {\r\n    const response = await fetch(\"API_URL_TWITTER\");\r\n    const data = await response.json();\r\n    return data.map(tweet => ({\r\n        title: tweet.text,\r\n        url: `https://twitter.com/user/status/${tweet.id}`,\r\n        thumbnail: tweet.media ? tweet.media[0].url : null\r\n    }));\r\n};\r\n\r\nexport const fetchYouTubeData = async () => {\r\n    try {\r\n        console.log(\"🔵 YouTube API çağrılıyor...\");\r\n\r\n        const response = await fetch(\"http://localhost:8080/api/youtube/trends\");\r\n\r\n        console.log(\"🔵 API Yanıt Kodu:\", response.status);\r\n\r\n        if (!response.ok) {\r\n            throw new Error(`HTTP Hatası! Durum Kodu: ${response.status}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n        console.log(\"✅ JSON Olarak İşlenen Veri:\", data);\r\n\r\n        if (!Array.isArray(data)) {\r\n            console.error(\"⚠️ Beklenmeyen API yanıtı:\", data);\r\n            return [];\r\n        }\r\n\r\n        return data.map(video => ({\r\n            title: video.title,\r\n            url: video.url,\r\n            thumbnail: video.thumbnail || \"\"  // Eğer thumbnail boşsa, hata vermesin diye.\r\n        }));\r\n    } catch (error) {\r\n        console.error(\"❌ YouTube verileri çekilemedi:\", error);\r\n        return [];\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const fetchInstagramData = async () => {\r\n    const response = await fetch(\"API_URL_INSTAGRAM\");\r\n    const data = await response.json();\r\n    return data.map(post => ({\r\n        title: post.caption,\r\n        url: post.permalink,\r\n        thumbnail: post.media_url\r\n    }));\r\n};\r\n"],"mappings":"AAAA,OAAO,MAAMA,eAAe,GAAG,MAAAA,CAAA,KAAY;EACvC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oDAAoD,CAAC;EAClF,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;EAClC,OAAOD,IAAI,CAACA,IAAI,CAACE,QAAQ,CAACC,GAAG,CAACC,IAAI,KAAK;IACnCC,KAAK,EAAED,IAAI,CAACJ,IAAI,CAACK,KAAK;IACtBC,GAAG,EAAEF,IAAI,CAACJ,IAAI,CAACM,GAAG;IAClBC,SAAS,EAAEH,IAAI,CAACJ,IAAI,CAACO,SAAS,KAAK,MAAM,GAAGH,IAAI,CAACJ,IAAI,CAACO,SAAS,GAAG;EACtE,CAAC,CAAC,CAAC;AACP,CAAC;AAGD,OAAO,MAAMC,gBAAgB,GAAG,MAAAA,CAAA,KAAY;EACxC,MAAMV,QAAQ,GAAG,MAAMC,KAAK,CAAC,iBAAiB,CAAC;EAC/C,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;EAClC,OAAOD,IAAI,CAACG,GAAG,CAACM,KAAK,KAAK;IACtBJ,KAAK,EAAEI,KAAK,CAACC,IAAI;IACjBJ,GAAG,EAAE,mCAAmCG,KAAK,CAACE,EAAE,EAAE;IAClDJ,SAAS,EAAEE,KAAK,CAACG,KAAK,GAAGH,KAAK,CAACG,KAAK,CAAC,CAAC,CAAC,CAACN,GAAG,GAAG;EAClD,CAAC,CAAC,CAAC;AACP,CAAC;AAED,OAAO,MAAMO,gBAAgB,GAAG,MAAAA,CAAA,KAAY;EACxC,IAAI;IACAC,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;IAE3C,MAAMjB,QAAQ,GAAG,MAAMC,KAAK,CAAC,0CAA0C,CAAC;IAExEe,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEjB,QAAQ,CAACkB,MAAM,CAAC;IAElD,IAAI,CAAClB,QAAQ,CAACmB,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,4BAA4BpB,QAAQ,CAACkB,MAAM,EAAE,CAAC;IAClE;IAEA,MAAMhB,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAClCa,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEf,IAAI,CAAC;IAEhD,IAAI,CAACmB,KAAK,CAACC,OAAO,CAACpB,IAAI,CAAC,EAAE;MACtBc,OAAO,CAACO,KAAK,CAAC,4BAA4B,EAAErB,IAAI,CAAC;MACjD,OAAO,EAAE;IACb;IAEA,OAAOA,IAAI,CAACG,GAAG,CAACmB,KAAK,KAAK;MACtBjB,KAAK,EAAEiB,KAAK,CAACjB,KAAK;MAClBC,GAAG,EAAEgB,KAAK,CAAChB,GAAG;MACdC,SAAS,EAAEe,KAAK,CAACf,SAAS,IAAI,EAAE,CAAE;IACtC,CAAC,CAAC,CAAC;EACP,CAAC,CAAC,OAAOc,KAAK,EAAE;IACZP,OAAO,CAACO,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACtD,OAAO,EAAE;EACb;AACJ,CAAC;AAUD,OAAO,MAAME,kBAAkB,GAAG,MAAAA,CAAA,KAAY;EAC1C,MAAMzB,QAAQ,GAAG,MAAMC,KAAK,CAAC,mBAAmB,CAAC;EACjD,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;EAClC,OAAOD,IAAI,CAACG,GAAG,CAACC,IAAI,KAAK;IACrBC,KAAK,EAAED,IAAI,CAACoB,OAAO;IACnBlB,GAAG,EAAEF,IAAI,CAACqB,SAAS;IACnBlB,SAAS,EAAEH,IAAI,CAACsB;EACpB,CAAC,CAAC,CAAC;AACP,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}